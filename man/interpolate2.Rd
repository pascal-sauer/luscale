% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/interpolate2.R
\name{interpolate2}
\alias{interpolate2}
\title{Interpolate 2}
\usage{
interpolate2(x, x_ini, map, x_ini_lr = NULL)
}
\arguments{
\item{x}{The object to be disaggregated. See details for further important
information.}

\item{x_ini}{The initial distribution of x in high resolution.}

\item{map}{A relation map between low and high resolution}

\item{x_ini_lr}{Low resolution version of x_ini. Will be calculated automatically, if not provided.
Can speed up computation, if provided.}
}
\value{
The disaggregated MAgPIE object containing x_ini as first
timestep
}
\description{
Disaggregates a cellular MAgPIE output to 0.5 degree based on a spam matrix
and information about the initial 0.5 degree distribution.
}
\details{
This is a streamlined version of function \code{\link{interpolate}}

The function is based on the following assumption: \code{x} is an object in
low resolution with more than one data dimension and the sum over the data
dimensions is constant over time. Example: One column cropland, the other
one (cell size - cropland). \code{x_ini} provides the same type of data
as \code{x} but in high resolution and for the time step previous the initial
time step of x (e.g. if \code{x} goes from t=a to t=a+10, \code{x_ini} must
be provided for t=a-1). The function calculates the amount by which the 
individual data columns of x change in each timestep. The output is based 
on \code{x_ini} and only the differences in later timesteps to ths starting
point are disaggregated by the spam matrix. This assures that as little 
information as possible is lost from the original dataset \code{x_ini}.

The disaggregation procedure itself works as follows:

1. Differences in distribution between years are derived for the low
resolution data set.

2. Based on these differences extension and reduction shares are calculated
for the different pools. Reduction shares are calculated relative to the
pool itself (e.g. a reduction in a cropland pool from 10ha to 6ha leads to a
reduction share of (10ha-6ha)/10ha = 40\%). At the same time extension
shares are calculated relative to the pool which was made available by
reductions of the other pools (e.g. cropland is reduced from 10ha to 6ha,
forest area is reduced from 2ha to 1ha, but pastureland increases from 20ha
to 25ha. In this case the extension share of pasture will be
(25ha-20ha)/(10ha-6ha+2ha-1ha)=5ha/5ha=100\%). This difference in
calculation of reduction and extension share is crucial for the application
at the high resolution level because otherwise the calculation will not add
up.

3. Reduction and extension shares are disaggregated to the high resolution
level by just assigning the same low resolution shares to all belonging
cells at the higher resolution.

4.Starting with the provided high resolution pool data set for the initial
year reduction shares are applied on all pools in all cells. The pool which
is made available for expansions is calculated by summing up all values
which were released by the pool reductions.

5. Pool expansions are calculated based on the pool made available in 4 for
the first time step.

6. Steps 4 and 5 are repeated for all the following years based on the newly
created high resolution data.

Applying this procedure makes sure that relative pool reductions are
identical for the low resolution cell and all belonging high resolutions
cells whereas the extension shares relative to the areas made available per
cell are identical between low resolution cell and belonging high resolution
cells.
}
\seealso{
\code{\link[madrat]{toolAggregate}}
}
\author{
Jan Philipp Dietrich
}
